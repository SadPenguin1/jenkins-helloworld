pipeline {
    agent any
    environment {
        REMOTE_SERVER_IP = '192.168.10.56'
        REMOTE_SERVER_SSH_PORT = '22'
        REMOTE_SERVER_USER = 'rnd'
        REMOTE_SERVER_PASSWORD = 'abcd456789'
        IMAGE_VERSION = 'nguyenmanhdung/jenkins-helloworld:0.0.2'
    }
    stages {
        stage('Clone stage') {
            steps {
                echo 'Hello Nguyen Manh Dung'
            }
        }
        stage('Check Maven Version') {
            steps {
                script {
                    sh '/opt/apache-maven-3.9.6/bin/mvn --version'
                }
            }
        }
        stage('Build Jar') {
		    steps {
		        script {
		            
		            sh 'ls'          
		            dir('test') {
		                sh 'ls'
		                sh '/opt/apache-maven-3.9.6/bin/mvn clean install'
		            }
		        }
		    }
		}
		stage('Build image') {
		    steps {
		        script {
		       		sh 'ls' 
			        dir('test') {
			           	withDockerRegistry(credentialsId: 'docker-nmd', url: 'https://index.docker.io/v1/') {
		          		app = docker.build("nguyenmanhdung/jenkins-helloworld:0.0.2")
		          		sh 'docker push nguyenmanhdung/jenkins-helloworld:0.0.2'	          		
						}
			        }
		        }
		    }
		}
		stage('SSH-Remote') {
		    steps {
		    echo 'Kết nối remote server'
		       	sshPublisher(publishers: [
				    sshPublisherDesc(
				        configName: 'ssh-remote-56',
				        transfers: [
				            sshTransfer(
				                cleanRemote: false,
				                excludes: '',
				                execCommand: 'ls && docker pull nguyenmanhdung/jenkins-helloworld:0.0.2 && docker run -d -p 9888:9888 nguyenmanhdung/jenkins-helloworld:0.0.2',
				                execTimeout: 120000,
				                flatten: false,
				                makeEmptyDirs: false,
				                noDefaultExcludes: false,
				                patternSeparator: '[, ]+',
				                remoteDirectory: '',
				                remoteDirectorySDF: false,
				                removePrefix: '',
				                sourceFiles: ''
				            )
				        ],
				        usePromotionTimestamp: false,
				        useWorkspaceInPromotion: false,
				        verbose: false
				    )
				])
		    }
		}

		stage('Run Container in Remote Server') {
            steps {
               script {
            	echo 'Suceess'
       
       	 		}
            }
        }
    }
}
